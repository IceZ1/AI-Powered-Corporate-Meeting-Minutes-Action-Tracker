name: 🛡️ Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly Monday 6 AM UTC

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: 🔍 Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout Code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit semgrep

    - name: 🔍 Run Safety Check (Vulnerability Scan)
      run: |
        safety check --json --output safety-report.json
        safety check --short-report
      continue-on-error: true

    - name: 🛡️ Run Bandit (Security Linter)
      run: |
        bandit -r . -f json -o bandit-report.json
        bandit -r . -f txt
      continue-on-error: true

    - name: 🔎 Run Semgrep (SAST)
      run: |
        python -m semgrep scan --config=auto --json --output=semgrep-report.json .
        python -m semgrep scan --config=auto .
      continue-on-error: true

    - name: 🐳 Run Trivy (Container & Filesystem Scan)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: 📊 Upload Trivy Results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: 🔍 CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: python
        queries: security-and-quality

    - name: 🔄 Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: 📈 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:python"

    - name: 📊 Generate Security Report
      run: |
        echo "# 🛡️ Security Scan Report" > security-summary.md
        echo "" >> security-summary.md
        echo "## 📅 Scan Date: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        if [ -f safety-report.json ]; then
          echo "## 🔍 Vulnerability Scan (Safety)" >> security-summary.md
          echo "- Report generated successfully" >> security-summary.md
          echo "" >> security-summary.md
        fi
        
        if [ -f bandit-report.json ]; then
          echo "## 🛡️ Security Linting (Bandit)" >> security-summary.md
          echo "- Static analysis completed" >> security-summary.md
          echo "" >> security-summary.md
        fi
        
        if [ -f semgrep-report.json ]; then
          echo "## 🔎 SAST Analysis (Semgrep)" >> security-summary.md
          echo "- Semantic analysis completed" >> security-summary.md
          echo "" >> security-summary.md
        fi
        
        echo "## 📋 Next Steps" >> security-summary.md
        echo "1. Review detailed reports in artifacts" >> security-summary.md
        echo "2. Address any critical or high severity issues" >> security-summary.md
        echo "3. Update dependencies if vulnerabilities found" >> security-summary.md
        echo "4. Run tests to ensure fixes don't break functionality" >> security-summary.md

    - name: 📤 Upload Security Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json
          trivy-results.sarif
          security-summary.md

    - name: 💬 Comment on PR (if PR)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('security-summary.md')) {
            const report = fs.readFileSync('security-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🛡️ Security Scan Results\n\n${report}\n\n---\n\n🤖 *Automated security scan completed. Check the [Actions tab](${context.payload.pull_request.html_url.replace('/pull/', '/actions/runs/')}) for detailed reports.*`
            });
          }

  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📂 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔍 Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, MPL-2.0